{
	"name": "pipeline3",
	"properties": {
		"activities": [
			{
				"name": "set current date",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "current_date",
					"value": {
						"value": "@if(empty(pipeline().parameters.ref_timestamp), adddays(utcnow(),-1, 'yyyy-MM-dd'), adddays(formatDateTime(pipeline().parameters.ref_timestamp,'yyyy-MM-dd'),-1, 'yyyy-MM-dd'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get config",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set current date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"dataset": {
						"referenceName": "ccbalab_json",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get config').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"quoteAllText": true
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestResource1",
									"type": "DatasetReference",
									"parameters": {
										"cw_tableName": {
											"value": "@{concat(toLower(item().source.tableName), '?sysparm_limit=1000000')}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "dlccbalab_json",
									"type": "DatasetReference",
									"parameters": {
										"cw_dir": {
											"value": "@toLower(concat(item().destination.fileName))",
											"type": "Expression"
										},
										"cw_fileName": {
											"value": "@toLower(concat(item().destination.fileName, '_initial_load.json'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"ref_timestamp": {
				"type": "string"
			}
		},
		"variables": {
			"current_date": {
				"type": "String"
			},
			"before_date": {
				"type": "String"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}